name: 将DockerHub镜像

permissions: write-all        

on:
  workflow_dispatch:
    inputs:
      dockerhub_image:
        description: '要拉取的DockerHub镜像名称'
        required: true
        default: 'nginx'
      tags:
        description: '镜像标签（多个用逗号分隔，默认：latest）'
        required: false
        default: 'latest'
      ghcr_image:
        description: '推送到GHCR.IO的镜像名称'
        required: true
        default: 'myimage'
      platform:
        description: '镜像平台架构（默认：linux/amd64）'
        required: false
        default: 'linux/amd64'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ inputs.ghcr_image }}

jobs:
  mirror:
    runs-on: ubuntu-latest

    steps:
      - name: 登录GitHub容器注册表
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}  
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 设置小写的GitHub用户名
        run: echo "ACTOR_LOWER=$(echo '${{ github.actor }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: 处理多个标签
        id: process-tags
        run: |
          # 清理标签字符串，移除空格和引号
          CLEAN_TAGS=$(echo "${{ inputs.tags }}" | tr -d "'\"" | tr ',' '\n' | sed 's/^ *//;s/ *$//')
          
          # 将标签存入数组
          TAG_ARRAY=()
          while read -r TAG; do
            if [ -n "$TAG" ]; then
              TAG_ARRAY+=("$TAG")
            fi
          done <<< "$CLEAN_TAGS"
          
          # 输出为多行字符串
          echo "TAGS<<EOF" >> $GITHUB_OUTPUT
          printf "%s\n" "${TAG_ARRAY[@]}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          echo "处理的标签列表:"
          printf " - %s\n" "${TAG_ARRAY[@]}"

      - name: 拉取并推送镜像
        run: |
          # 读取处理后的标签
          TAGS="${{ steps.process-tags.outputs.TAGS }}"
          
          echo "开始处理以下标签:"
          echo "$TAGS"
          
          for TAG in $TAGS; do
            echo "正在处理标签: $TAG"
            
            # 拉取指定平台的DockerHub镜像
            docker pull --platform ${{ inputs.platform }} ${{ inputs.dockerhub_image }}:$TAG
            
            # 标记为GHCR镜像
            GHCR_IMAGE="${{ env.REGISTRY }}/${{ env.ACTOR_LOWER }}/${{ env.IMAGE_NAME }}:$TAG"
            docker tag ${{ inputs.dockerhub_image }}:$TAG $GHCR_IMAGE
            
            # 推送到GHCR
            docker push $GHCR_IMAGE
            echo "已成功推送镜像: $GHCR_IMAGE"
          done
