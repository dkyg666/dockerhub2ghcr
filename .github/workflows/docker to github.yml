name: 将DockerHub镜像同步到GHCR.IO

permissions: write-all        

on:
  workflow_dispatch:
    inputs:
      dockerhub_image:
        description: '要拉取的DockerHub镜像名称'
        required: true
        default: 'nginx'
      tags:
        description: '镜像标签（多个用逗号分隔，默认：latest）'
        required: false
        default: 'latest'
      ghcr_image:
        description: '推送到GHCR.IO的镜像名称'
        required: true
        default: 'myimage'
      platform:
        description: '镜像平台架构（默认：linux/amd64）'
        required: false
        default: 'linux/amd64'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ inputs.ghcr_image }}

jobs:
  mirror:
    runs-on: ubuntu-latest

    steps:
      - name: 登录GitHub容器注册表
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}  
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 设置小写的GitHub用户名
        run: echo "ACTOR_LOWER=$(echo '${{ github.actor }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: 处理多个标签
        run: |
          # 将逗号分隔的标签转换为数组
          TAGS_ARR=($(echo "${{ inputs.tags }}" | tr ',' ' '))
          # 转换为JSON格式并存入环境变量
          echo "TAGS_JSON=$(printf '%s\n' "${TAGS_ARR[@]}" | jq -R . | jq -s .)" >> $GITHUB_ENV

      - name: 拉取并推送镜像
        run: |
          # 读取标签数组
          TAGS=$(echo '${{ env.TAGS_JSON }}' | jq -r '.[]')
          
          for TAG in $TAGS; do
            echo "正在处理标签: $TAG"
            
            # 拉取指定平台的DockerHub镜像
            docker pull --platform ${{ inputs.platform }} ${{ inputs.dockerhub_image }}:$TAG
            
            # 标记为GHCR镜像
            GHCR_IMAGE="${{ env.REGISTRY }}/${{ env.ACTOR_LOWER }}/${{ env.IMAGE_NAME }}:$TAG"
            docker tag ${{ inputs.dockerhub_image }}:$TAG $GHCR_IMAGE
            
            # 推送到GHCR
            docker push $GHCR_IMAGE
            echo "已成功推送镜像: $GHCR_IMAGE"
          done
